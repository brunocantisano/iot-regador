{
    "swagger": "2.0",
    "info": {
        "description": "Regador ESP8266 using REST api server",
        "version": "0.0.0",
        "title": "Swagger Regador",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "bruno.cantisano@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "HOST_WATER",
    "basePath": "/",
    "tags": [
        {
            "name": "comando",
            "description": "Comandos",
            "externalDocs": {
                "description": "Descubra mais sobre a Bruno Cardoso Cantisano",
                "url": "https://brunocantisano.github.io/"
            }
        },
        {
            "name": "lista",
            "description": "Lista",
            "externalDocs": {
                "description": "Descubra mais sobre Bruno Cardoso Cantisano",
                "url": "https://brunocantisano.github.io/"
            }
        }
    ],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/health": {
            "get": {
                "tags": [
                    "comando"
                ],
                "summary": "Checagem Health",
                "security": [],
                "description": "Faz checagem da saúde da aplicação",
                "operationId": "health",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "tags": [
                    "comando"
                ],
                "summary": "Métricas do ESP8266",
                "security": [],
                "description": "Faz checagem das métricas do ESP8266",
                "operationId": "metrics",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ports": {
            "get": {
                "tags": [
                    "comando"
                ],
                "summary": "Lista de portas utilizadas",
                "security": [
                    {
                        "basicAuth": []
                    }
                ],
                "description": "",
                "operationId": "getPortas",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Comando executado com sucesso"
                    },
                    "204": {
                        "description": "Não foi possível encontrar as informações"
                    },
                    "401": {
                        "description": "Não autenticado"
                    }
                }
            }
        },
        "/sensors": {
	      "get": {
	      "tags": ["comando"],
	      "summary": "Busca o estado de um sensor",
	      "description": "Consulta o sensor",
	      "operationId": "getSensor",
	      "produces": ["application/json"],
	      "security": [{ "basicAuth": [] }],
	      "parameters": [
	        {
	        "name": "sensor",
	        "in": "query",
	        "description": "Sensor (1..5)",
	        "required": true,
	        "type": "integer",
	        "enum": [1, 2, 3, 4, 5]
	        }
	      ],
	      "responses": {
	        "200": {
	        "description": "Leitura realizada",
	        "schema": { "$ref": "#/definitions/SensorReading" },
	        "examples": {
	          "application/json": { "sensor": 3, "pin": "D3", "value": 1, "ts": 1725148800 }
	        }
	        },
	        "400": { "description": "Parâmetros inválidos ou ausentes" },
	        "401": { "description": "Não autenticado" },
	        "404": { "description": "Sensor não encontrado" }
	      }
	      },
	      "put": {
	      "tags": ["comando"],
	      "summary": "Atualiza o estado de um sensor",
	      "description": "Permite alterar o estado (ligado/desligado) de um sensor específico",
	      "operationId": "updateSensor",
	      "consumes": ["application/json"],
	      "produces": ["application/json"],
	      "security": [{ "basicAuth": [] }],
	      "parameters": [
	        {
	        "name": "sensor",
	        "in": "query",
	        "description": "Sensor (1..5)",
	        "required": true,
	        "type": "integer",
	        "enum": [1, 2, 3, 4, 5]
	        },
	        {
	        "name": "body",
	        "in": "body",
	        "description": "Novo estado do sensor",
	        "required": true,
	        "schema": {
	          "type": "object",
	          "properties": {
	          "value": {
	            "type": "integer",
	            "description": "0 = desligado, 1 = ligado",
	            "enum": [0, 1]
	          }
	          },
	          "required": ["value"]
	        }
	        }
	      ],
	      "responses": {
		        "200": {
		        "description": "Estado atualizado com sucesso",
		        "schema": { "$ref": "#/definitions/SensorReading" },
		        "examples": {
		          "application/json": { "sensor": 3, "pin": "D3", "value": 1, "ts": 1725148800 }
		        }
		        },
		        "400": { "description": "Parâmetros inválidos ou ausentes" },
		        "401": { "description": "Não autenticado" },
		        "404": { "description": "Sensor não encontrado" }
		      }
	      }
	    },
		"/list": {
	    "get": {
	      "tags": ["comando"],
	      "summary": "Busca a lista de agendamentos",
	      "description": "Consulta a lista",
	      "operationId": "getList",
	      "produces": ["application/json"],
	      "security": [{ "basicAuth": [] }],
	      "parameters": [
	        {
	        "name": "dataAgenda",
	        "in": "query",
	        "description": "data (01/10/2025 11:20:00)",
	        "required": true,
	        "type": "string"
	        }
	      ],
	      "responses": {
		        "200": {
		        "description": "Leitura realizada",
		        "schema": { "$ref": "#/definitions/Lista" },
			        "examples": {
			          "application/json": { "sensor": "01/10/2025 11:20:00" }
			        }
		        },
		        "400": { "description": "Parâmetros inválidos ou ausentes" },
		        "401": { "description": "Não autenticado" },
		        "404": { "description": "Agendamento não encontrado" }
		      }
	      },
	      "post": {
	      "tags": ["comando"],
	      "summary": "Insere um agendamento",
	      "description": "Permite inserir a data de agendamento",
	      "operationId": "insereAgendamento",
	      "consumes": ["application/json"],
	      "produces": ["application/json"],
	      "security": [{ "basicAuth": [] }],
	      "parameters": [
		        {
			        "name": "dataAgenda",
			        "in": "query",
			        "description": "data (01/10/2025 11:20:00)",
			        "required": true,
			        "type": "string"
		        },
		        {
			        "name": "body",
			        "in": "body",
			        "description": "Novo agendamento",
			        "required": true,
			        "schema": {
			          "type": "object",
			          "properties": {
			          "value": {
			            "type": "string",
			            "description": "01/10/2025 11:20:00"
			          }
	          		},
		        	"required": ["value"]
		      		}
	        	}
	      ],
	      "responses": {
		        "200": {
		        "description": "Agendamento inserido com sucesso",
		        "schema": { "$ref": "#/definitions/Lista" },
		        "examples": {
		          "application/json": { "sensor": "01/10/2025 11:20:00" }
		        }
		        },
		        "400": { "description": "Parâmetros inválidos ou ausentes" },
		        "401": { "description": "Não autenticado" },
		        "404": { "description": "Agendamento não encontrado" }
		      }
	      },
	      "delete": {
	      "tags": ["comando"],
	      "summary": "Apaga um agendamento",
	      "description": "Permite apagar a data de agendamento",
	      "operationId": "removeAgendamento",
	      "consumes": ["application/json"],
	      "produces": ["application/json"],
	      "security": [{ "basicAuth": [] }],
	      "parameters": [
		        {
			        "name": "dataAgenda",
			        "in": "query",
			        "description": "data (01/10/2025 11:20:00)",
			        "required": true,
			        "type": "string"
		        }
	      ],
	      "responses": {
		        "200": {
		        "description": "Agendamento removido com sucesso",
		        "schema": { "$ref": "#/definitions/Lista" },
		        "examples": {
		          "application/json": { "sensor": "01/10/2025 11:20:00" }
		        }
		        },
		        "400": { "description": "Parâmetros inválidos ou ausentes" },
		        "401": { "description": "Não autenticado" },
		        "404": { "description": "Agendamento não encontrado" }
		      }
	      }
	    },
    },
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic"
        }
    },
    "definitions": {
        "Comando": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "format": "int64",
                    "description": "1-inicia, 0-para"
                }
            },
            "xml": {
                "name": "Comando"
            }
        },
        "Lista": {
            "type": "object",
            "properties": {
                "dataAgenda": {
                    "type": "string",
                    "description": "Hora de programação para molhar as plantas"
                }
            },
            "xml": {
                "name": "Lista"
            }
        },
		"SensorReading": {
		  "type": "object",
		  "properties": {            
			"sensor": { "type": "integer", "example": 3 },
			"pin":   { "type": "string",  "example": "D3" },
			"value": { "type": "integer", "format": "int32", "example": 1 },
			"ts":    { "type": "integer", "format": "int64", "description": "epoch seconds" }
		  },
		  "required": ["sensor","value"]
		}
    },
    "externalDocs": {
        "description": "Descubra mais sobre Bruno Cardoso Cantisano",
        "url": "https://brunocantisano.github.io/"
    }
}